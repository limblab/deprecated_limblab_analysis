function params = parameterSets(params,paramSetName)
% this is where I can define preset parameters for different names of
% paramter sets

setParamValues(params,'paramSetName',paramSetName);

switch lower(paramSetName)
    case 'baseline' % get baseline activity
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'baseline'},...
            'numberBootIterations',10,...
            'classifierBlocks',[1,4,7], ...
            'blocks', {[0,1],[0 0.33 0.66 1],[0 0.33 0.66 1]}, ...
            'useTasks',{'CO','RT','FF','VR','CS'});
    case 'planning' % normal settings for target direction
        params = setParamValues(params,'tuningCoordinates','target', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'befgo','afton','gomove','initial'},...'go','onpeak',
            'classifierBlocks',[1,3,5], ...
            'blocks', {[0,1],[0 0.5 1],[0 0.5 1]}, ...
            'useTasks',{'CO','FF','VR'}, ...
            'm1_latency',0.1, ...
            'pmd_latency',0.1, ...
            'movementTime',0.3, ...
            'ciSignificance',90*pi/180, ...
            'm1_r2Min',0.4, ...
            'pmd_r2Min',0.4);
        
    case 'planning_cs' % normal settings for target direction
        params = setParamValues(params,'tuningCoordinates','target', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'befgo','afton','go','gomove','onpeak','initial'},...
            'classifierBlocks',[1,2,3], ...
            'blocks', {[0 0.33 0.66 1],[],[]}, ...
            'useTasks',{'CO','CS'}, ...
            'm1_latency',0, ...
            'pmd_latency',0, ...
            'movementTime',0.3, ...
            'ciSignificance',50*pi/180, ...
            'm1_r2Min',0.4);
    case 'movement' % normal settings for movement direction
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'onpeak'},...
            'classifierBlocks',[1,4,7], ...
            'blocks', {[0,1],[0 0.33 0.66 1],[0 0.33 0.66 1]}, ...
            'useTasks',{'CO','RT','FF','VR','CS'});
    case 'movement_cs' % normal settings for movement direction
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'onpeak'},...
            'classifierBlocks',[1,2,3], ...
            'blocks', {[0 0.33 0.66 1],[],[]}, ...
            'useTasks',{'CO','RT','CS'});
    case 'movement2' % different movement settings
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'onpeak'},...
            'classifierBlocks',[1,3,4], ...
            'blocks', {[0,1],[0 0.5 1],[0.2 1]}, ...
            'useTasks',{'CO','RT','FF','VR','CS'});
    case 'movebc' % normal settings for movement direction
        params = setParamValues(params,'tuningCoordinates','target', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'pre','initial'},...
            'movementTime',0.5, ...
            'classifierBlocks',[1,2,2], ...
            'blocks', {[0 1],[0 1],[0 1]}, ...
            'useTasks',{'CO','RT','BC'}, ...
            'min_reactionTime', [-1, -1, -1], ...
            'max_reactionTime', [-1, -1, -1], ...
            'min_time2target', [-1, -1, -1], ...
            'max_time2target', [-1, -1, -1], ...
            'min_time2peak', [-1, -1, -1], ...
            'max_time2peak', [-1, -1, -1], ...
            'isiPercent',1);
    case 'target' % normal settings for target direction
        params = setParamValues(params,'tuningCoordinates','target', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'full'},...
            'classifierBlocks',[1,4,7], ...
            'blocks', {[0,1],[0 0.33 0.66 1],[0 0.33 0.66 1]}, ...
            'useTasks',{'CO','RT','FF','VR','CS'});
    case 'movetime' % using different time points over duration of CO movement
        % need some preprocessing
        divideTime = [0.3, 0.1];
        numBlocks = floor(( 1 + divideTime(2) - divideTime(1) ) / divideTime(2));
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'time'},...
            'classifierBlocks',[(1:numBlocks)',(numBlocks+1:2*numBlocks)',(2*numBlocks+1:3*numBlocks)'], ...
            'blocks', {[0,1],[0.33 1],[0.33 1]}, ...
            'divideTime',divideTime, ...
            'useTasks',{'CO','FF','VR','CS'});
    case 'movetimetarg' % using different time points over duration of CO movement
        % need some preprocessing
        divideTime = [0.3, 0.1];
        numBlocks = floor(( 1 + divideTime(2) - divideTime(1) ) / divideTime(2));
        params = setParamValues(params,'tuningCoordinates','target', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'time'},...
            'classifierBlocks',[(1:numBlocks)',(numBlocks+1:2*numBlocks)',(2*numBlocks+1:3*numBlocks)'], ...
            'blocks', {[0,1],[0.33 1],[0.33 1]}, ...
            'divideTime',divideTime, ...
            'useTasks',{'CO','FF','VR','CS'});
    case 'movefine' % using finer temporal resolution on blocks of PD fits
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'onpeak'},...
            'classifierBlocks',[ones(10,1),(2:11)',repmat(12,10,1)], ...
            'blocks', {[0,1],[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],[0.33 1]}, ...
            'useTasks',{'CO','RT','FF','VR','CS'});
    case 'targtime'
        % need some preprocessing
        divideTime = [0.3, 0.05];
        numBlocks = floor(( 1 + divideTime(2) - divideTime(1) ) / divideTime(2));
        params = setParamValues(params,'tuningCoordinates','target', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'time'},...
            'classifierBlocks',[(1:numBlocks)',(numBlocks+1:2*numBlocks)',(2*numBlocks+1:3*numBlocks)'], ...
            'blocks', {[0,1],[0.33 1],[0.33 1]}, ...
            'divideTime',divideTime, ...
            'useTasks',{'CO','FF','VR','CS'});
    case 'targfine'
        params = setParamValues(params,'tuningCoordinates','target', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'onpeak'},...
            'classifierBlocks',[ones(10,1),(2:11)',repmat(12,10,1)], ...
            'blocks', {[0,1],[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],[0.33 1]}, ...
            'useTasks',{'CO','RT','FF','VR','CS'});
    case 'glm'
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'glm'},...
            'tuningPeriods',{'file'},...
            'classifierBlocks',[1,4,7], ...
            'blocks', {[0,1],[0 0.33 0.66 1],[0 0.33 0.66 1]}, ...
            'useTasks',{'CO','RT','FF','VR','CS'});
    case 'speedslow'
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'onpeak'}, ...
            'classifierBlocks',[1,2,3], ...
            'blocks', {[0,1],[0.33 1],[0.33 1]}, ...
            'useTasks',{'RT','FF','CS'});
    case 'speedfast'
        params = setParamValues(params,'tuningCoordinates','movement', ...
            'tuningMethods',{'regression'},...
            'tuningPeriods',{'onpeak'},...
            'classifierBlocks',[1,2,3], ...
            'blocks', {[0,1],[0.33 1],[0.33 1]}, ...
            'useTasks',{'RT','FF','CS'});
    otherwise
        error('Parameter Set Name not recognized. Add it to .../doc/parameterSets.m!');
end