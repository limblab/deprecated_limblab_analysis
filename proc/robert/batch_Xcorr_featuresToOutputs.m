% this is the base decoder date to use.  Will go into regexp, so is
% actually a regular expression.  In other words, for decoder1 use
%
BASE_DECODER_DATE='(08242011)|(09012011)';
%
% for decoder2 (NON causal) alone, use
%
% BASE_DECODER_DATE='041(1|2)2012(?!.*causal)';
%
% for decoder2 (causal) alone, use
%
% BASE_DECODER_DATE='041(1|2)2012(?=.*causal)';
%
% to accept either, just remove the lookaround operator from the regular
% expression.

originalDir='E:\personnel\RobertF\monkey_analyzed\LFPcontrol\Xcorr';
cd(originalDir)

days={...
    '09-02-2011', ...
    '09-06-2011', ...
    '09-07-2011', ...
    '09-08-2011', ...
    '09-09-2011', ...
    '03-19-2012', ...
    '03-21-2012', ...
    '03-26-2012', ...
    '03-28-2012', ...
    '03-30-2012', ...
    };

Chewie_decoder1days={...
    '09-02-2011', ...
    '09-06-2011', ...
    '09-07-2011', ...
    '09-08-2011', ...
    '09-09-2011', ...
    '09-12-2011', ...
    '09-15-2011', ...
    '09-16-2011', ...
    '09-19-2011', ...
    '09-23-2011', ...
    '09-26-2011', ...
    '10-07-2011', ...
    '10-17-2011', ...
    '10-21-2011', ...
    '10-24-2011', ...
    '11-21-2011', ...
    '11-23-2011', ...
    '11-30-2011', ...
    '12-01-2011', ...
    '12-02-2011', ...
    '12-06-2011', ...
    '12-07-2011', ...
    '12-08-2011', ...
    '12-09-2011', ...
    '12-12-2011', ...
    '01-09-2012', ...
    '01-13-2012', ...
    '01-16-2012', ...
    '01-17-2012', ...    
    '03-19-2012', ...
    '03-21-2012', ...
    '03-26-2012', ...
    '03-28-2012', ...
    '03-30-2012', ...
    '04-02-2012', ...
    };

Chewie_decoder2days={...
    '04-13-2012', ...
    '04-16-2012', ...
    '04-17-2012', ...
    '04-18-2012', ...
    '04-19-2012', ...       % mixed with decoder1
    '04-20-2012', ...       % mixed with decoder1
    '04-23-2012', ...
    '04-24-2012', ...       % mixed with decoder1
    '04-25-2012', ...       % mixed with decoder1
    '04-26-2012', ...       % mixed with decoder1
    '04-27-2012', ...       % mixed with decoder1
    '04-30-2012', ...       % mixed with decoder1
    '05-01-2012', ...
    '05-02-2012', ...       % mixed with decoder1
    '05-03-2012', ...       % mixed with decoder1
    '05-04-2012', ...       % mixed with causal decoder2
    '05-08-2012', ...       % mixed with causal decoder2
    '05-10-2012', ...       % mixed with causal decoder2
    '05-11-2012', ...       % mixed with causal decoder2
    };

% Chewie_days=Chewie_decoder2days;

peakIndAll_x_Chewie=[]; peakIndAll_y_Chewie=[];
peakValAll_x_Chewie=[]; peakValAll_y_Chewie=[];
BDFlist_all=[];
if isempty(regexp(pwd,'featMats','once')), mkdir('featMats'), end
for n=1:length(Chewie_days)
    % take a day, find the kinStruct, and identifies all the
    % files of the given control type that were included.
    BDFlist=findBDF_withControl('Chewie',Chewie_days{n},'LFP');
    % beginning with the use of decoder2, it is possible to have 2
    % kinds of (e.g.) LFP control on a given day.  with tools at
    % hand, ferret out the actual decoder used for each file.  If
    % it matches a pattern, keep it in the list.
    for k=1:length(BDFlist)
        fprintf(1,'finding path to %s...\n',BDFlist{k})
        pathToBDF=findBDFonCitadel(BDFlist{k});
        pathToBDF(regexp(pathToBDF,sprintf('\n')))='';
        fprintf(1,'finding path to decoder...\n')
        pathToDecoder=decoderPathFromBDF(pathToBDF);
        pathToDecoder(regexp(pathToDecoder,sprintf('\n')))='';
        [~,decoderName,~]=FileParts(pathToDecoder);
        fprintf(1,'decoder file was %s.\n',decoderName)
        % match against pattern.
        if isempty(regexp(decoderName,BASE_DECODER_DATE,'once'))
            cprintf('Errors','%s eliminated.\n',BDFlist{k})
            BDFlist{k}='';
        else
            cprintf('Comments','%s accepted.\n',BDFlist{k})
        end
    end
    BDFlist(cellfun(@isempty,BDFlist))=[];
            
    BDFlist_all=[BDFlist_all; BDFlist'];
    for k=1:length(BDFlist)
%         if isempty(regexp(pwd,'featMats','once')), cd('featMats'), end
%         if ~exist(BDFlist{k},'file')~=2
            run_makefmatc_causal(BDFlist{k},500)
            peakIndAll_x_Chewie=[peakIndAll_x_Chewie; evalin('base','peakInd_x')];
            peakIndAll_y_Chewie=[peakIndAll_y_Chewie; evalin('base','peakInd_y')];
            peakValAll_x_Chewie=[peakValAll_x_Chewie; evalin('base','peakVal_x')];
            peakValAll_y_Chewie=[peakValAll_y_Chewie; evalin('base','peakVal_y')];
            clear peakInd_* peakVal_*
%         else
%             % not going to work in current incarnation
%             load(BDFlist{k},'featMat','sigTrimmed','out_struct')
%             [~,~,timelags,peakInd_x,peakInd_y,peakVal_x,peakVal_y]= ...
%                 featureOutputXcorr(out_struct,numlags,featMat,sigTrimmed,numfp);
%         end
    end
end

% save('C:\Documents and Settings\Administrator\Desktop\Mike_Data\Spike LFP Decoding\Chewie','peak*')
cd(originalDir)

peakIndAll_x_Mini=[]; peakIndAll_y_Mini=[];
peakValAll_x_Mini=[]; peakValAll_y_Mini=[];
% days for Mini
Mini_days={...
    '09-02-2011', ...
    '09-07-2011', ...
    '09-08-2011', ...
    '09-09-2011', ...
    '09-12-2011', ...
    '03-19-2012', ...
    '03-21-2012', ...
    '03-28-2012', ...
    '03-30-2012', ...
    '04-02-2012', ...
    };

Mini_decoder2days={...
    '04-13-2012', ...
    '04-16-2012', ...
    '04-17-2012', ...
    '04-18-2012', ...
    '04-19-2012', ...       % mixed with decoder1
    '04-20-2012', ...       % mixed with decoder1
    '04-23-2012', ...
    '04-24-2012', ...       % mixed with decoder1
    '04-25-2012', ...       % mixed with decoder1
    '04-26-2012', ...       % mixed with decoder1
    '04-27-2012', ...       % mixed with decoder1
    '04-30-2012', ...       % mixed with decoder1
    '05-01-2012', ...       % mixed with decoder1
    '05-02-2012', ...       % mixed with decoder1
    '05-03-2012', ...       % mixed with decoder1
    '05-04-2012', ...       % mixed with decoder2 causal
    '05-11-2012', ...       % mixed with decoder2 causal
    '05-23-2012', ...       % mixed with decoder3
%     '05-08-2012', ...       % mixed with decoder2 causal
    };

% Mini_days=Mini_decoder2days;

for n=1:length(Mini_days)
    % take a day, find the kinStruct, and identifies all the
    % files of the given control type that were included.
    BDFlist=findBDF_withControl('Mini',Mini_days{n},'LFP');
    
    % beginning with the use of decoder2, it is possible to have 2
    % kinds of (e.g.) LFP control on a given day.  with tools at
    % hand, ferret out the actual decoder used for each file.  If
    % it matches a pattern, keep it in the list.
    for k=1:length(BDFlist)
        fprintf(1,'finding path to %s...\n',BDFlist{k})
        pathToBDF=findBDFonCitadel(BDFlist{k});
        pathToBDF(regexp(pathToBDF,sprintf('\n')))='';
        fprintf(1,'finding path to decoder...\n')
        % this is dumb.  should be a simple find operation, since we
        % already know (from findBDF_withControl), that we're dealing with
        % LFP control files.  decoderPathFromBDF is only genuinely
        % necessary when finding which decoder was used that day.
        pathToDecoder=decoderPathFromBDF(pathToBDF);
        pathToDecoder(regexp(pathToDecoder,sprintf('\n')))='';
        [~,decoderName,~]=FileParts(pathToDecoder);
        fprintf(1,'decoder file was %s.\n',decoderName)
        % match against pattern.
        if isempty(regexp(decoderName,BASE_DECODER_DATE,'once'))
            fprintf(1,'%s ',BDFlist{k})
            cprintf('Errors','eliminated.\n')
            BDFlist{k}='';
        else
            fprintf(1,'%s ',BDFlist{k})
            cprintf('Comments','accepted.\n')
        end
    end
    BDFlist(cellfun(@isempty,BDFlist))=[];
    
    BDFlist_all=[BDFlist_all; BDFlist'];
    for k=1:length(BDFlist)
        if isempty(regexp(pwd,'featMats','once')), cd('featMats'), end
        run_makefmatc_causal(BDFlist{k},500)
        peakIndAll_x_Mini=[peakIndAll_x_Mini; evalin('base','peakInd_x')];
        peakIndAll_y_Mini=[peakIndAll_y_Mini; evalin('base','peakInd_y')];
        peakValAll_x_Mini=[peakValAll_x_Mini; evalin('base','peakVal_x')];
        peakValAll_y_Mini=[peakValAll_y_Mini; evalin('base','peakVal_y')];
    end
end
cd(originalDir)

% save('Y:\user_folders\Robert\data\monkey\outputs\LFPcontrol\Xcorr stuff\XCcorr_batch_peakVal_All.mat', ...
%     'peakIndAll_x_Chewie','peakIndAll_y_Chewie','peakValAll_x_Chewie', ...
%     'peakValAll_y_Chewie','peakIndAll_x_Mini','peakIndAll_y_Mini', ...
%     'peakValAll_x_Mini','peakValAll_y_Mini')