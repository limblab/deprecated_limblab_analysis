% Build trial_table
% trial_table = 
%[ cursor_on_ct start end result bump_direction bump_magnitude stim_id Xstart Ystart Xend Yend; ... ] for each trial
% trial type = 1 (bump), 2 (stim)

function [trial_table , table_columns] = BC_detectionC_trial_table(filename)
load(filename)
databurst_version = bdf.databursts{1,2}(2);
start_trial_code = hex2dec('1A');
reward_code = hex2dec('20');
abort_code = hex2dec('21');
fail_code = hex2dec('22');
incomplete_code = hex2dec('23');
bump_code = hex2dec('50');
stim_code = hex2dec('60');
trial_starts = bdf.words(bdf.words(:,2) == start_trial_code, 1);

table_columns.cursor_on_ct = 1;
table_columns.start = 2;
table_columns.end = 3;
table_columns.result = 4;
table_columns.bump_direction = 5;
table_columns.bump_magnitude = 6;
table_columns.stim_id = 7;
table_columns.Xstart = 8;
table_columns.Ystart = 9;
table_columns.Xend = 10;
table_columns.Yend = 11;

bdf.words = bdf.words(find(bdf.words(:,1)>bdf.databursts{1} & bitand(bdf.words(:,2),hex2dec('f0'))==hex2dec('10'),1,'first'):...
    find(bitand(bdf.words(:,2),hex2dec('f0'))==hex2dec('20'),1,'last'),:);

% trial_starts = bdf.words(bitand(bdf.words(:,2),hex2dec('f0'))==hex2dec('10'),1);

trial_starts = bdf.words(bitand(bdf.words(:,2),hex2dec('60'))==hex2dec('60') |...    
    bdf.words(:,2)==abort_code,1);
 
trial_ends = bdf.words(bitand(bdf.words(:,2), hex2dec('f0')) == hex2dec('20'), :);
        
trial_table = zeros(length(trial_starts),11);

for i=1:length(trial_starts)
    start_time = trial_starts(i);

    if trial_ends(i,2) ~= abort_code
        stim_id = bdf.words(bdf.words(:,1)==start_time,2);
        stim_id = stim_id-hex2dec('60');
    else
        stim_id = -1;
    end
      
    end_idx = find(trial_ends(:,1) >= start_time, 1, 'first');
    end_pos = bdf.pos(find(bdf.pos(:,1)<=trial_ends(i),1,'last'),2:3);
    trial_table(i,table_columns.start) = start_time;
    trial_table(i,table_columns.end) = trial_ends(end_idx,1);
    trial_table(i,table_columns.result) = trial_ends(end_idx,2);
    trial_table(i,table_columns.stim_id) = stim_id;
    trial_table(i,[table_columns.Xend table_columns.Yend]) = end_pos;
end

databurst_times = cell2mat(bdf.databursts(:,1));

for i = 1:size(trial_table,1)  
    trial_table(i,[table_columns.Xstart table_columns.Ystart]) = bdf.pos(find(bdf.pos(:,1)>trial_table(i,table_columns.start),1),2:3);        % x and y start
    temp_databurst = cell2mat(bdf.databursts(find(databurst_times<trial_table(i,2),1,'last'),2));     
    trial_table(i,table_columns.bump_direction) = bytes2float(temp_databurst(16:19))';                   % bump direction 
    trial_table(i,table_columns.bump_magnitude) = 2*bytes2float(temp_databurst(20:23))';                   % bump magnitude
end
% remove x and y offsets
trial_table(:,[table_columns.Xstart table_columns.Xend]) = trial_table(:,[table_columns.Xstart table_columns.Xend])+repmat(bytes2float(bdf.databursts{1,2}(8:11)),length(trial_table),2);
trial_table(:,[table_columns.Ystart table_columns.Yend]) = trial_table(:,[table_columns.Ystart table_columns.Yend])+repmat(bytes2float(bdf.databursts{1,2}(12:15)),length(trial_table),2);

trial_table(:,table_columns.bump_direction) = round(10000*mod(trial_table(:,table_columns.bump_direction),2*pi))/10000;

%get target size in a very smart way
target_size = bytes2float(bdf.databursts{1,2}(26:29));

%get target size in a very stupid way
if (strcmp(filename,'D:\Data\Pedro\Pedro_BC_detectionC_001') || strcmp(filename,'D:\Data\Pedro\Pedro_BC_detectionC_002'))
    [hist_bins,half_size] = hist(abs(trial_table(trial_table(:,table_columns.result)==33,table_columns.Xstart)),0:.1:5);
    [max_bin,max_ind] = max(hist_bins);
    target_size = 2*half_size(max_ind);
end

ct_on = bdf.words(bdf.words(:,2)==26,1);

%time at which monkey moves into center target
cursor_on_ct = zeros(length(trial_table),1);
x_offset = bytes2float(bdf.databursts{1,2}(8:11));
y_offset = bytes2float(bdf.databursts{1,2}(12:15));
for i=1:length(trial_table)
    ct_on_idx = find(bdf.pos(:,1)>=ct_on(i),1,'first');
    go_cue_idx = find(bdf.pos(:,1)<=trial_table(i,table_columns.start),1,'last');
    pos_temp = bdf.pos(ct_on_idx:go_cue_idx+200,:);
    pos_temp(:,2) = pos_temp(:,2)+x_offset;
    pos_temp(:,3) = pos_temp(:,3)+y_offset;
    cursor_on_ct_idx = find(abs(pos_temp(:,2))<=target_size/2 &...
        abs(pos_temp(:,3))<=target_size/2,1,'first');
    if isempty(cursor_on_ct_idx)
        [temp cursor_on_ct_idx] = min(max(pos_temp(:,2),pos_temp(:,3)));
    end
    cursor_on_ct(i) = pos_temp(cursor_on_ct_idx,1);
    if cursor_on_ct(i) > trial_table(i,table_columns.start)
        cursor_on_ct(i) = trial_table(i,table_columns.start)-.01;
    end
end

trial_table(:,table_columns.cursor_on_ct) = cursor_on_ct;
trial_table(:,table_columns.bump_magnitude)
% save(filename,'trial_table','-append')