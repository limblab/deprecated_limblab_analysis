Fiducial trackingBrian Dekleva8/20/2010This includes six MATLAB programs:FIDUCIAL_TRACK.MTRACK.MANGLES.MCALC_ANGLES_FROM_IMGS.MADJ_DISTAL_FIDUC.MWRIST_LENGTH_OBJ.M------------------------------------------------------------------------------------------------------------FIDUCIAL_TRACK.M- This program controls the image processing involved with fiducial tracking.  It takes as input a single image, and outputs the coordinates of all three markers (manipulandum handle, distal arm, and medial arm).  	>>  img = imread('Users/Joe/ frames/raw_image1','png');	>> fiducial_track(img)	ans =		335.2434	256.9485	>>TROUBLESHOOTING	If this program is used to track markers on a monkey, some parameter adjustment may be necessary. 	 Firstly, the size threshold may be too high (since the monkey's wrist is significantly smaller), and therefore may need to be lowered.  This, however, leads to a greater probability of malfunctioning.  To improve performance, you may have to cover unwanted reflective surfaces (metal joint of manipulandum arm, etc.).  To see what features the program is keeping, run in debugger and plot img_bw.  In finding the two arm markers, this program assumes that they are the largest features above the eccentricity threshold.  Check to ensure that there are no large, reflective objects (floor, manipulandum arm, etc.) in view of the camera. 	Secondly, the luminosity threshold may be too high.  If the size threshold is fairly low and the program is still not functioning properly, the luminosity threshold may need to be lowered.  	Thirdly, the eccentricity threshold may need to be adjusted.  In finding the arm markers, the program assumes them to be fairly line-like.  If (due to the smaller wrist width of the monkey) the program is still failing after adjustment of the two previous parameters, or the markers appear on the black and white images [>> plot(img_bw)] but are not given in the coordinate output, try lowering the eccentricity threshold.  ------------------------------------------------------------------------------------------------------------TRACK.M - This program gives visual feedback about how well the program fiducial_track.m is functioning.  It takes as input the path to the image sequence, the start number, end number, and save path, and outputs a new image sequence to the desired folder.  This program will take about half a second per image, so it is not advised to run it for image sequences longer than a few hundred frames. 	>> track('Users/Joe/MovFrames/img',1,500,'png','Users/Joe/NewMovFrames/');------------------------------------------------------------------------------------------------------------ANGLES.M - This program takes as input an n-by-6 matrix of fiducial coordinates and returns a vector of flexion angles.  Input matrix M has the following structure:	M(:,1:2) =  handle coordinates	M(:,3:4) = distal arm fiducial coordinates	M(:,5:6) = medial arm fiducial coordinatesThis program is used in calc_angles_from_imgs.m.------------------------------------------------------------------------------------------------------------CALC_ANGLES_FROM_IMGS.M - This program takes as input the path to an image sequence, beginning image number, end image number, and file type.  It outputs a vector of angles describing the flexion in each frame.  This program uses adj_dist_fiduc.m to return a closer approximation of wrist angle by adjusting the angle vertex location.  ------------------------------------------------------------------------------------------------------------ADJ_DIST_FIDUC.M - This program is used by calc_angles_from_imgs.m to adjust the angle vertex location.  The angle described by the three markers does not represent an accurate description of actual wrist angle, since the vertex angle is the distal fiducial rather than the actual point of rotation.  To compensate for this, adj_dis_fiduc.m takes a matrix containing all marker coordinates (Handle, Distal, and Medial) and replaces the distal arm coordinate with a new coordinate, P, on the same line as Distal and Medial, that minimizes the change in length of PH.  If the distal fiducial were located at the actual point of rotation of the wrist, P would be equal to D.  In calc_angles_from_imgs.m, this new coordinate matrix is then used by angles.m to return the 'correct' angles. ------------------------------------------------------------------------------------------------------------WRIST_LENGTH_OBJ.M - This program is an objective function used by adj_dist_fiduc.m to calculate the location of the adjusted angle vertex position. ------------------------------------------------------------------------------------------------------------