function alg = getDefaultAlgorithm(Model)
% Create default algorithm template based on version < 8.0.

%   Copyright 2010-2014 The MathWorks, Inc.

Ny = size(Model,1);
Regul = idoptions.RegularizedEstimation.getRegulStruct;
if any(strcmp(class(Model),{'idnlarx', 'idnlhw', 'idnlgrey'}))
   adv = struct(...
      'GnPinvConst', 1e4,...
      'InitGnaTol', 1e-4,...
      'MinParChange',1e-16,...
      'StepReduction',2,...
      'MaxBisections', 25,...
      'LMStartValue', 1e-3,...
      'LMStep', 10,...
      'RelImprovement', 0,...
      'MaxFunEvals', Inf);
else
   Sea = struct(...
      'GnPinvConst', 1e4,...
      'InitGnaTol', 1e-4,...
      'LmStep', 2,...
      'StepReduction', 2,...
      'MaxBisections', 25,...
      'LmStartValue', 1e-3, ...
      'RelImprovement',0);
   
   Thresh = struct(...
      'Zstability', 1+sqrt(eps),...
      'Sstability', 0,...
      'AutoInitialState', 1.05);
   
   adv = struct('Search', Sea, 'Threshold', Thresh);
end

% Note: CovarianceFlag is a new entry to Algorithm that stores the "flag"
% portion of the CovarianceMatrix value. This is so that the
% EstCovar option can be updated easily when user modifies
% CovarianceMatrix in the model.

switch class(Model)
   case {'idnlarx', 'idnlhw'}
      
      alg = struct(...
         'SearchMethod', 'Auto',...
         'Criterion','det',...
         'Weighting', eye(Ny), ...
         'MaxIter', 20,...
         'Tolerance', 1e-5,...
         'LimitError', 0,...
         'Display', 'Off',...
         'MaxSize', 250000,...
         'IterWavenet', 'Auto',...
         'Regularization',Regul,...
         'Advanced', adv);
   case 'idnlgrey'
      simopt = idnlgrey.getDefaultSimOptions(); 
      gradopt = idoptions.nlgreyest.getDefaultGradOptions();
      alg = struct(...
         'SimulationOptions',simopt,...
         'GradientOptions', gradopt,...
         'SearchMethod', 'Auto',...
         'Criterion','trace',...
         'Weighting', eye(Ny), ...
         'MaxIter', 20,...
         'Tolerance', 1e-5,...
         'LimitError', 0,...
         'Display', 'Off',...
         'CovarianceFlag', 'estimate',...
         'Regularization',Regul,...
         'Advanced', adv);
   otherwise
      % linear
      alg = struct(...
         'Focus', 'Prediction',...
         'MaxIter', 20,...
         'Tolerance', 0.01,...
         'LimitError',0,...
         'MaxSize', 'Auto',...
         'SearchMethod', 'Auto',...
         'Criterion', 'det',...
         'Weighting', eye(Ny),...
         'FixedParameter',[],...
         'Display', 'Off',...
         'N4Weight', 'Auto',...
         'N4Horizon', 'Auto',...
         'CovarianceFlag',[],...
         'Regularization',Regul,...
         'Advanced', adv);
end
